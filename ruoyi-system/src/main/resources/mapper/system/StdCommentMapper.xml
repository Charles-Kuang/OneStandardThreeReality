<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.StdCommentMapper">
    
    <resultMap type="StdComment" id="StdCommentResult">
        <result property="commentId"    column="comment_id"    />
        <result property="commentContent"    column="comment_content"    />
        <result property="newsId"    column="news_id"    />
        <result property="reviewerId"    column="reviewer_id"    />
        <result property="reviewerName"   column="reviewer_name"    />
        <result property="parentId"    column="parent_id"    />
        <result property="likesNum"    column="likes_num"    />
        <result property="dislikesNum"    column="dislikes_num"    />
        <result property="createTime"    column="create_time"    />
        <result property="orderNum"    column="order_num"    />
        <result property="delFlag"    column="del_flag"    />
    </resultMap>

    <sql id="selectStdCommentVo">
        select comment_id, comment_content, news_id, reviewer_id, parent_id, likes_num, dislikes_num, nc.create_time, nc.order_num, nc.del_flag,
            u.user_name as reviewer_name
        from std_news_comment nc
            left join sys_user u on u.user_id = nc.reviewer_id
    </sql>

    <select id="selectStdCommentList" parameterType="StdComment" resultMap="StdCommentResult">
        <include refid="selectStdCommentVo"/>
        <where>  
            <if test="commentContent != null  and commentContent != ''"> and comment_content like concat('%', #{commentContent}, '%')</if>
            <if test="parentId != null "> and parent_id = #{parentId}</if>
            <if test="reviewerName != null and reviewerName != ''"> and u.user_name like concat ('%', #{reviewerName}, '%') </if>
            <if test="newsId != null ">  and news_id = #{newsId}</if>
        </where>
    </select>
    
    <select id="selectStdCommentByCommentId" parameterType="Long" resultMap="StdCommentResult">
        <include refid="selectStdCommentVo"/>
        where comment_id = #{commentId}
    </select>
        
    <insert id="insertStdComment" parameterType="StdComment" useGeneratedKeys="true" keyProperty="commentId">
        insert into std_news_comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="commentContent != null">comment_content,</if>
            <if test="newsId != null">news_id,</if>
            <if test="reviewerId != null">reviewer_id,</if>
            <if test="parentId != null">parent_id,</if>
            <if test="likesNum != null">likes_num,</if>
            <if test="dislikesNum != null">dislikes_num,</if>
            <if test="createTime != null">create_time,</if>
            <if test="orderNum != null">order_num,</if>
            <if test="delFlag != null">del_flag,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="commentContent != null">#{commentContent},</if>
            <if test="newsId != null">#{newsId},</if>
            <if test="reviewerId != null">#{reviewerId},</if>
            <if test="parentId != null">#{parentId},</if>
            <if test="likesNum != null">#{likesNum},</if>
            <if test="dislikesNum != null">#{dislikesNum},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="orderNum != null">#{orderNum},</if>
            <if test="delFlag != null">#{delFlag},</if>
         </trim>
    </insert>

    <update id="updateStdComment" parameterType="StdComment">
        update std_news_comment
        <trim prefix="SET" suffixOverrides=",">
            <if test="commentContent != null">comment_content = #{commentContent},</if>
            <if test="newsId != null">news_id = #{newsId},</if>
            <if test="reviewerId != null">reviewer_id = #{reviewerId},</if>
            <if test="parentId != null">parent_id = #{parentId},</if>
            <if test="likesNum != null">likes_num = #{likesNum},</if>
            <if test="dislikesNum != null">dislikes_num = #{dislikesNum},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="orderNum != null">order_num = #{orderNum},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
        </trim>
        where comment_id = #{commentId}
    </update>

    <delete id="deleteStdCommentByCommentId" parameterType="Long">
        delete from std_news_comment where comment_id = #{commentId}
    </delete>

    <delete id="deleteStdCommentByCommentIds" parameterType="String">
        delete from std_news_comment where comment_id in 
        <foreach item="commentId" collection="array" open="(" separator="," close=")">
            #{commentId}
        </foreach>
    </delete>
</mapper>